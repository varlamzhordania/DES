version: '3'
services:
  gunicorn:
    restart: always
    container_name: gunicorn
    build:
      context: ./backend
    volumes:
      - ./backend/:/home/des/backend
      - ./cert/:/home/des
    command: >
      bash -c "python manage.py makemigrations && python manage.py migrate && python manage.py collectstatic --noinput && python manage.py load_groups && python manage.py load_palettes && gunicorn -c conf/gunicorn_conf.py core.wsgi:application"
    expose:
      - "8000"
    depends_on:
      - redis
      - postgres
    env_file:
      - ./backend/.env
  daphne:
    restart: always
    container_name: daphne
    build:
      context: .
    volumes:
      - ./backend/:/home/des/backend
    command: >
      bash -c "daphne -u /var/run/django.sock -b 0.0.0.0 -p 8001 core.asgi:application"
    expose:
      - "8001"
    depends_on:
      - redis
      - postgres
  nginx:
    restart: always
    container_name: nginx
    image: nginx:latest
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./cert/:/home/des/cert
      - ./backend/static/:/home/des/backend/static
      - ./backend/media/:/home/des/backend/media
      - ./backend/staticfiles/:/home/des/backend/staticfiles
    depends_on:
      - gunicorn
      - daphne
  postgres:
    image: postgres:latest
    container_name: postgres
    restart: always
    ports:
      - '5432:5432'
    env_file:
      - ./backend/.env
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - ./pg/:/var/lib/postgresql/data
  redis:
    container_name: redis
    restart: always
    image: redis
    ports:
      - '6379:6379'